plugins {
    id "com.diffplug.spotless" version "5.15.1"
}

apply plugin: 'java'
apply plugin: 'war'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    flatDir { dirs "./" }
}

// In this section you declare the dependencies for your production and test code
dependencies {

    compileOnly group: 'javax', name: 'javaee-api', version: '7.0'
    compileOnly group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.0.7.Final'
    compileOnly group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final'
    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.5'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.7'
    implementation group: 'commons-io', name: 'commons-io', version: '2.7'
    implementation group: 'org.json', name: 'json', version: '20201115'

    testImplementation "junit:junit:4.11"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.12.4'
    testImplementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.0.7.Final'
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.197'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '3.1.0'
    testImplementation group: 'commons-io', name: 'commons-io', version: '2.7'
    testImplementation group: 'org.json', name: 'json', version: '20200518'
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        importOrder()
        removeUnusedImports()
        googleJavaFormat('1.8').aosp().reflowLongStrings()
    }
}

test {
    filter {
        exclude '**/*It*'
    }
    minHeapSize = "2048m"
    maxHeapSize = "4096m"
    forkEvery 30
}

task IntegrationTest( type: Test ) {
    include '**/*'
    minHeapSize = "2048m"
    maxHeapSize = "4096m"
    forkEvery 30
}

import org.apache.tools.ant.taskdefs.condition.Os
task npmInstall(type: Exec) {
    String npm = 'npm';
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        npm = 'npm.cmd'
    }
    workingDir './ui'
    commandLine npm, 'install'
}

task buildAngular(type: Exec) {
    workingDir "./app"
    println '' + workingDir
    commandLine "ng build --base-href /jee7app/ --prod"
}

task buildReact(type: Exec) {
    dependsOn tasks.npmInstall
    workingDir "./ui"
    println '' + workingDir
    commandLine 'npm', 'run-script', 'build'
}

task copyReact(type: Copy) {
    dependsOn tasks.buildReact
    from("${projectDir}/ui/build/")
    into("${projectDir}/src/main/webapp/")
    include("**/*")
}

task copyOnly(type: Copy) {
    from("${projectDir}/ui/build/")
    into("${projectDir}/src/main/webapp/")
    include("**/*")
}